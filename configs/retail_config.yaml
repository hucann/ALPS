columns_to_drop:
  - Store ID
  - Category
  - Region
  - Inventory Level
  - Units Ordered
  - Demand Forecast
  - Price
  - Discount
  - Competitor Pricing

missing_value_handling: interpolate

aggregate_daily:
  groupby_cols:
    - Date
    - Product ID
  agg_dict:
    Units Sold: sum
    Weather Condition: 
      function: mode
    Holiday/Promotion: max
    Seasonality:
      function: mode

add_week_column: true

aggregate_weekly:
  groupby_cols:
    - Week
    - Product ID
  agg_dict:
    Units Sold: sum
    Weather Condition: 
      function: mode
    Holiday/Promotion: max
    Seasonality:
      function: mode

reformat_week_column: true

encoding_columns:
  - Weather Condition
  - Seasonality

train_test_split:
  split_value: 0.7
  #id_column: Product ID
  #time_index_column: Week
  target_column: Units Sold
  past_covariate_columns: [Weather Condition]
  future_covariate_columns: [Holiday/Promotion, Seasonality]

data_file_path: data/retail_store_inventory.csv

model_configurations:
  NaiveMovingAverage:
    input_chunk_length: 12
    extra_args: {}
  ARIMA:
    add_encoders:
      cyclic: { future: ["month"] }
    extra_args: {}

  Prophet:
    country_holidays: SG
    add_seasonalities:
      - name: monthly
        seasonal_periods: 4.33
        fourier_order: 5
    add_encoders:
      cyclic: { future: ["month"] }
    extra_args: {}

  RandomForest:
    lags: 4
    lags_past_covariates: 12
    lags_future_covariates: [0, 1, 2, 3]
    output_chunk_length: 4
    add_encoders:
      cyclic: { future: ["month"] }
    extra_args: {}

  TCNModel:
    input_chunk_length: 12
    output_chunk_length: 4
    add_encoders:
      cyclic: { future: ["month"] }
    extra_args: {}

  NBEATSModel:
    input_chunk_length: 12
    output_chunk_length: 4
    n_epochs: 20
    add_encoders:
      cyclic: { future: ["month"] }
    extra_args: {}

  RNNModel:
    input_chunk_length: 12
    training_length: 16
    model: LSTM
    likelihood: GaussianLikelihood
    random_state: 42
    add_encoders:
      cyclic: { future: ["month"] }
      datetime_attribute: { future: ["year", "month", "weekofyear"] }
    extra_args:
      n_epochs: 50
